@startuml
!include ../../../style.puml

box Ui UI_COLOR_T1
participant ":UiManager" as UiManager UI_COLOR
participant ":MainWindow" as MainWindow UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ViewCommandParser" as ViewCommandParser LOGIC_COLOR
participant ":ViewCommand" as ViewCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":AddressBook" as AddressBook MODEL_COLOR
participant "current:Person" as currPerson MODEL_COLOR
end box

activate UiManager

UiManager -> MainWindow : fillInnerParts()
activate MainWindow

MainWindow -> LogicManager : getSinglePerson()
activate LogicManager

[-> LogicManager : execute("view 1")

LogicManager -> AddressBookParser : parseCommand("view 1")
activate AddressBookParser

activate AddressBookParser
AddressBookParser -> AddressBookParser : parseResidentCommand("view", "1")
deactivate AddressBookParser

create ViewCommandParser
AddressBookParser -> ViewCommandParser
activate ViewCommandParser

ViewCommandParser --> AddressBookParser
deactivate ViewCommandParser

AddressBookParser -> ViewCommandParser : parse("1")
activate ViewCommandParser

create ViewCommand
ViewCommandParser -> ViewCommand
activate ViewCommand

ViewCommand --> ViewCommandParser
deactivate ViewCommand

ViewCommandParser --> AddressBookParser
deactivate ViewCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ViewCommandParser -[hidden]-> AddressBookParser
destroy ViewCommandParser

AddressBookParser --> LogicManager
deactivate AddressBookParser

LogicManager -> ViewCommand : execute()
activate ViewCommand

ViewCommand -> Model : getFilteredPersonList()
activate Model

Model -> AddressBook : getFilteredPersonList()
activate AddressBook

AddressBook --> Model :
deactivate AddressBook

Model --> ViewCommand : lastShownList
deactivate Model

create currPerson
ViewCommand -> currPerson : lastShownList.get(0)
activate currPerson

currPerson --> ViewCommand : personToShow
deactivate currPerson

ViewCommand -> Model : setSinglePerson(personToShow)
activate Model

Model --> ViewCommand
deactivate Model

create CommandResult
ViewCommand -> CommandResult
activate CommandResult

CommandResult --> ViewCommand
deactivate CommandResult

ViewCommand --> LogicManager : result
deactivate ViewCommand

LogicManager --> MainWindow
deactivate LogicManager

MainWindow --> UiManager
deactivate MainWindow

[<--UiManager
deactivate UiManager
@enduml
